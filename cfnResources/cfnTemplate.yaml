AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Device Management Signing Api
Parameters:
  ApplicationName:
    Type: String
  Environment:
    Type: String
  OutpostBucketName:
    Type: String
    Default: ""
  SigningImageUri:
    Type: String

Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ApplicationName}-${Environment}-lambda-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
                - events.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: !Sub /${ApplicationName}/
      Policies:
        - PolicyName: LambdaExecutionRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeNetworkInterfaces
                  - ec2:CreateNetworkInterface
                  - ec2:DeleteNetworkInterface
                  - ec2:DescribeInstances
                  - ec2:AttachNetworkInterface
                Resource: "*"

              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ssm:*
                Resource: "*"
              - Effect: Allow
                Action: logs:CreateLogGroup
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub arn:aws:s3:::${OutpostBucketName}
                  - !Sub arn:aws:s3:::${OutpostBucketName}/*

  # Lambda Functions
  SignFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join ["_", ["SignFunction", !Ref Environment]]
      Code:
        ImageUri: !Ref SigningImageUri
      PackageType: Image
      Role: !GetAtt LambdaExecutionRole.Arn
      Timeout: 300
      Environment:
        Variables:
          Environment: !Ref Environment
          tmpFolder: "/tmp/"
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub canvas-common-${Environment}-PrivateSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub canvas-common-${Environment}-PrivateSubnet1

  SignFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: "SignFunction"
    Properties:
      RetentionInDays: 14
      LogGroupName: !Join ["", ["/aws/lambda/", !Ref SignFunction]]
